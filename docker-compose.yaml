version: '3.8'

networks:
  web-ecommerce:
    name: web-ecommerce
    driver: bridge

services:
  api-gateway:
    build:
      context: api-gateway
      dockerfile: Dockerfile
    image: dongnd/api-gateway
    # volumes:
    #   - .:/usr/src/app
    ports:
      - '8000:3000'
    # expose:
    #   - '8000'
    networks:
      - web-ecommerce
    env_file:
      - api-gateway/.env.development
    depends_on:
      - kafdrop
      - kafka
  auth-microservice:
    build:
      context: auth
      dockerfile: Dockerfile
    image: dongnd/auth-microservice
    networks:
      - web-ecommerce
    env_file:
      - auth/.env.development
    depends_on:
      - kafka
      - kafdrop
  kafdrop:
    image: obsidiandynamics/kafdrop
    restart: 'no'
    ports:
      - '9000:9000'
    environment:
      KAFKA_BROKERCONNECT: 'kafka:29092'
      JVM_OPTS: '-Xms16M -Xmx48M -Xss180K -XX:-TieredCompilation -XX:+UseStringDeduplication -noverify'
    depends_on:
      - 'kafka'
    networks:
      - web-ecommerce
  kafka:
    image: obsidiandynamics/kafka
    restart: 'no'
    ports:
      - '2181:2181'
      - '9092:9092'
    # hostname: 'kafka-internal.io'
    environment:
      # KAFKA_ADVERTISED_HOST_NAME: 'kafka-internal.io'
      # KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: 'INTERNAL://:29092,EXTERNAL://:9092'
      KAFKA_ADVERTISED_LISTENERS: 'INTERNAL://kafka:29092,EXTERNAL://localhost:9092'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT'
      KAFKA_INTER_BROKER_LISTENER_NAME: 'INTERNAL'
      KAFKA_ZOOKEEPER_SESSION_TIMEOUT: '6000'
      KAFKA_RESTART_ATTEMPTS: '10'
      KAFKA_RESTART_DELAY: '5'
      ZOOKEEPER_AUTOPURGE_PURGE_INTERVAL: '0'
    networks:
      - web-ecommerce
